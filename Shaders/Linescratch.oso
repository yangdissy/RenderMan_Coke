OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
surface Linescratch
param	color	Cin	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
param	float	octave	8		%read{67,67} %write{2147483647,-1}
param	float	amp	2		%read{74,74} %write{2147483647,-1}
param	float	angle	15		%read{2,2} %write{2147483647,-1}
oparam	color	Cout	1 1 1		%read{2147483647,-1} %write{77,77}
oparam	float	resultStripes	0		%read{2147483647,-1} %write{78,78}
global	point	P	%read{4,4} %write{2147483647,-1}
local	vector	___252_axis	%read{10,12} %write{7,7}
local	float	___252_cosang	%read{9,50} %write{8,8}
local	float	___252_sinang	%read{20,45} %write{8,8}
local	float	___252_cosang1	%read{19,44} %write{9,9}
local	float	___252_x	%read{13,45} %write{10,10}
local	float	___252_y	%read{18,43} %write{11,11}
local	float	___252_z	%read{20,48} %write{12,12}
local	matrix	___252_M	%read{54,54} %write{52,52}
local	float	rot	%read{8,8} %write{2,2}
local	point	d	%read{53,53} %write{4,4}
local	point	dd	%read{58,62} %write{55,55}
local	float	mag	%read{67,78} %write{56,76}
local	int	i	%read{67,76} %write{66,76}
local	float	f	%read{67,76} %write{57,76}
local	point	PP	%read{67,76} %write{64,64}
const	string	$const1	"radians"		%read{0,0} %write{2147483647,-1}
const	float	$const2	3.1415927		%read{1,1} %write{2147483647,-1}
const	float	$const3	180		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{1,1}
const	string	$const4	"shader"		%read{4,4} %write{2147483647,-1}
const	string	$const5	"transform"		%read{3,3} %write{2147483647,-1}
const	string	$const6	"common"		%read{4,4} %write{2147483647,-1}
const	point	$const7	0 0 0		%read{6,55} %write{2147483647,-1}
const	point	$const8	0 0 1		%read{6,6} %write{2147483647,-1}
const	string	$const9	"rotate"		%read{5,5} %write{2147483647,-1}
temp	vector	$tmp4	%read{7,7} %write{6,6}
const	float	$const10	1		%read{9,52} %write{2147483647,-1}
const	int	$const11	0		%read{10,58} %write{2147483647,-1}
const	int	$const12	1		%read{11,76} %write{2147483647,-1}
const	int	$const13	2		%read{12,62} %write{2147483647,-1}
temp	float	$tmp5	%read{17,17} %write{13,13}
temp	float	$tmp6	%read{15,15} %write{14,14}
temp	float	$tmp7	%read{16,16} %write{15,15}
temp	float	$tmp8	%read{17,17} %write{16,16}
temp	float	$tmp9	%read{52,52} %write{17,17}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	float	$tmp11	%read{21,21} %write{19,19}
temp	float	$tmp12	%read{21,21} %write{20,20}
temp	float	$tmp13	%read{52,52} %write{21,21}
temp	float	$tmp14	%read{23,23} %write{22,22}
temp	float	$tmp15	%read{25,25} %write{23,23}
temp	float	$tmp16	%read{25,25} %write{24,24}
temp	float	$tmp17	%read{52,52} %write{25,25}
const	float	$const14	0		%read{52,52} %write{2147483647,-1}
temp	float	$tmp18	%read{27,27} %write{26,26}
temp	float	$tmp19	%read{29,29} %write{27,27}
temp	float	$tmp20	%read{29,29} %write{28,28}
temp	float	$tmp21	%read{52,52} %write{29,29}
temp	float	$tmp22	%read{34,34} %write{30,30}
temp	float	$tmp23	%read{32,32} %write{31,31}
temp	float	$tmp24	%read{33,33} %write{32,32}
temp	float	$tmp25	%read{34,34} %write{33,33}
temp	float	$tmp26	%read{52,52} %write{34,34}
temp	float	$tmp27	%read{36,36} %write{35,35}
temp	float	$tmp28	%read{38,38} %write{36,36}
temp	float	$tmp29	%read{38,38} %write{37,37}
temp	float	$tmp30	%read{52,52} %write{38,38}
temp	float	$tmp31	%read{40,40} %write{39,39}
temp	float	$tmp32	%read{42,42} %write{40,40}
temp	float	$tmp33	%read{42,42} %write{41,41}
temp	float	$tmp34	%read{52,52} %write{42,42}
temp	float	$tmp35	%read{44,44} %write{43,43}
temp	float	$tmp36	%read{46,46} %write{44,44}
temp	float	$tmp37	%read{46,46} %write{45,45}
temp	float	$tmp38	%read{52,52} %write{46,46}
temp	float	$tmp39	%read{51,51} %write{47,47}
temp	float	$tmp40	%read{49,49} %write{48,48}
temp	float	$tmp41	%read{50,50} %write{49,49}
temp	float	$tmp42	%read{51,51} %write{50,50}
temp	float	$tmp43	%read{52,52} %write{51,51}
temp	vector	$tmp44	%read{55,55} %write{54,54}
temp	vector	$tmp45	%read{54,54} %write{53,53}
temp	float	$tmp46	%read{59,59} %write{58,58}
temp	float	$tmp47	%read{64,64} %write{59,59}
const	float	$const15	2		%read{59,59} %write{2147483647,-1}
temp	float	$tmp48	%read{61,61} %write{60,60}
temp	float	$tmp49	%read{64,64} %write{61,61}
const	float	$const17	100		%read{61,61} %write{2147483647,-1}
temp	float	$tmp50	%read{63,63} %write{62,62}
const	float	$const18	0.1		%read{63,63} %write{2147483647,-1}
temp	float	$tmp51	%read{64,64} %write{63,63}
temp	int	$tmp52	%read{65,76} %write{66,76}
temp	float	$tmp53	%read{67,76} %write{67,76}
temp	float	$tmp54	%read{67,76} %write{67,76}
const	string	$const19	"perlin"		%read{70,70} %write{2147483647,-1}
temp	point	$tmp55	%read{67,76} %write{67,76}
const	float	$const21	3		%read{68,68} %write{2147483647,-1}
temp	point	$tmp56	%read{67,76} %write{67,76}
temp	float	$tmp57	%read{67,76} %write{67,76}
temp	int	$tmp58	%read{2147483647,-1} %write{67,76}
code ___main___
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:11
#     point d=transform("shader",P);
	functioncall	$const1 3 	%filename{"E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl"} %line{11} %argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:88
# 
	div		$tmp1 $const2 $const3 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h"} %line{88} %argrw{"wrr"}
	mul		rot angle $tmp1 	%argrw{"wrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:12
#     point dd = rotate(d, rot, point(0,0,0), point(0,0,1));
	functioncall	$const5 5 	%filename{"E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl"} %line{12} %argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:258
#     fresnel(I, N, eta, Kr, Kt, R, T);
	transform	d $const6 $const4 P 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h"} %line{258} %argrw{"wrrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:13
#     float mag=0;
	functioncall	$const9 56 	%filename{"E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl"} %line{13} %argrw{"r"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:265
# point  transform (matrix Mto, point p) BUILTIN;
	sub		$tmp4 $const8 $const7 	%filename{"C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h"} %line{265} %argrw{"wrr"}
	normalize	___252_axis $tmp4 	%argrw{"wr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:267
# vector transform (string from, string to, vector p) BUILTIN;
	sincos		rot ___252_sinang ___252_cosang 	%line{267} %argrw{"rww"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:268
# point  transform (string from, string to, point p) BUILTIN;
	sub		___252_cosang1 $const10 ___252_cosang 	%line{268} %argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:269
# normal transform (string to, normal p) { return transform("common",to,p); }
	compref		___252_x ___252_axis $const11 	%line{269} %argrw{"wrr"}
	compref		___252_y ___252_axis $const12 	%argrw{"wrr"}
	compref		___252_z ___252_axis $const13 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:270
# vector transform (string to, vector p) { return transform("common",to,p); }
	mul		$tmp5 ___252_x ___252_x 	%line{270} %argrw{"wrr"}
	mul		$tmp6 ___252_x ___252_x 	%argrw{"wrr"}
	sub		$tmp7 $const10 $tmp6 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 ___252_cosang 	%argrw{"wrr"}
	add		$tmp9 $tmp5 $tmp8 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:271
# point  transform (string to, point p)  { return transform("common",to,p); }
	mul		$tmp10 ___252_x ___252_y 	%line{271} %argrw{"wrr"}
	mul		$tmp11 $tmp10 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp12 ___252_z ___252_sinang 	%argrw{"wrr"}
	add		$tmp13 $tmp11 $tmp12 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:272
# 
	mul		$tmp14 ___252_x ___252_z 	%line{272} %argrw{"wrr"}
	mul		$tmp15 $tmp14 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp16 ___252_y ___252_sinang 	%argrw{"wrr"}
	sub		$tmp17 $tmp15 $tmp16 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:274
# float transformu (string fromunits, string tounits, float x) BUILTIN;
	mul		$tmp18 ___252_x ___252_y 	%line{274} %argrw{"wrr"}
	mul		$tmp19 $tmp18 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp20 ___252_z ___252_sinang 	%argrw{"wrr"}
	sub		$tmp21 $tmp19 $tmp20 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:275
# 
	mul		$tmp22 ___252_y ___252_y 	%line{275} %argrw{"wrr"}
	mul		$tmp23 ___252_y ___252_y 	%argrw{"wrr"}
	sub		$tmp24 $const10 $tmp23 	%argrw{"wrr"}
	mul		$tmp25 $tmp24 ___252_cosang 	%argrw{"wrr"}
	add		$tmp26 $tmp22 $tmp25 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:276
# point rotate (point p, float angle, point a, point b)
	mul		$tmp27 ___252_y ___252_z 	%line{276} %argrw{"wrr"}
	mul		$tmp28 $tmp27 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp29 ___252_x ___252_sinang 	%argrw{"wrr"}
	add		$tmp30 $tmp28 $tmp29 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:278
#     vector axis = normalize (b - a);
	mul		$tmp31 ___252_x ___252_z 	%line{278} %argrw{"wrr"}
	mul		$tmp32 $tmp31 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp33 ___252_y ___252_sinang 	%argrw{"wrr"}
	add		$tmp34 $tmp32 $tmp33 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:279
#     float cosang, sinang;
	mul		$tmp35 ___252_y ___252_z 	%line{279} %argrw{"wrr"}
	mul		$tmp36 $tmp35 ___252_cosang1 	%argrw{"wrr"}
	mul		$tmp37 ___252_x ___252_sinang 	%argrw{"wrr"}
	sub		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:280
#     sincos (angle, sinang, cosang);
	mul		$tmp39 ___252_z ___252_z 	%line{280} %argrw{"wrr"}
	mul		$tmp40 ___252_z ___252_z 	%argrw{"wrr"}
	sub		$tmp41 $const10 $tmp40 	%argrw{"wrr"}
	mul		$tmp42 $tmp41 ___252_cosang 	%argrw{"wrr"}
	add		$tmp43 $tmp39 $tmp42 	%argrw{"wrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:282
#     float x = axis[0], y = axis[1], z = axis[2];
	matrix		___252_M $tmp9 $tmp13 $tmp17 $const14 $tmp21 $tmp26 $tmp30 $const14 $tmp34 $tmp38 $tmp43 $const14 $const14 $const14 $const14 $const10 	%line{282} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:/Program Files\\Pixar\\RenderManProServer-23.2\\lib\\osl\\include\\stdosl.h:283
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	sub		$tmp45 d $const7 	%line{283} %argrw{"wrr"}
	transformv	$tmp44 ___252_M $tmp45 	%argrw{"wrr"}
	add		dd $tmp44 $const7 	%argrw{"wrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:14
#     int i;
	assign		mag $const11 	%filename{"E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl"} %line{14} %argrw{"wr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:16
#     point PP = point(dd[0]*2, dd[1]*100, dd[2]*0.1);
	assign		f $const12 	%line{16} %argrw{"wr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:17
# 
	compref		$tmp46 dd $const11 	%line{17} %argrw{"wrr"}
	mul		$tmp47 $tmp46 $const15 	%argrw{"wrr"}
	compref		$tmp48 dd $const12 	%argrw{"wrr"}
	mul		$tmp49 $tmp48 $const17 	%argrw{"wrr"}
	compref		$tmp50 dd $const13 	%argrw{"wrr"}
	mul		$tmp51 $tmp50 $const18 	%argrw{"wrr"}
	point		PP $tmp47 $tmp49 $tmp51 	%argrw{"wrrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:19
# 	{
	for		$tmp52 67 68 75 77 	%line{19} %argrw{"r"}
	assign		i $const12 	%argrw{"wr"}
	lt		$tmp52 i octave 	%argrw{"wrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:21
# 		f*=amp;
	mul		$tmp55 $const21 PP 	%line{21} %argrw{"wrr"}
	mul		$tmp56 $tmp55 f 	%argrw{"wrr"}
	noise		$tmp54 $const19 $tmp56 	%argrw{"wrr"}
	abs		$tmp53 $tmp54 	%argrw{"wr"}
	div		$tmp57 $tmp53 f 	%argrw{"wrr"}
	add		mag mag $tmp57 	%argrw{"wrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:22
# 	}
	mul		f f amp 	%line{22} %argrw{"wrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:19
# 	{
	assign		$tmp58 i 	%line{19} %argrw{"wr"}
	add		i i $const12 	%argrw{"wrr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:24
#     resultStripes = mag;
	assign		Cout mag 	%line{24} %argrw{"wr"}
# E:\\MSC_CAVE_Files\\RendermanProjects\\RenderMan_Coke\\Shaders\\Linescratch.osl:25
# }
	assign		resultStripes mag 	%line{25} %argrw{"wr"}
	end
